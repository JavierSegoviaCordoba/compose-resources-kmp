{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[NO_ACTUAL_FOR_EXPECT] Expected function 'painterResource' has no actual declaration in module compose-resources.core for JVM\nThe following declaration is incompatible because number of value parameters is different:\n    public fun painterResource(drawable: Drawable): Painter\nThe following declaration is incompatible because parameter types are different:\n    public actual fun painterResource(resource: [ERROR : String], type: [ERROR : String]): Painter\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "core/commonMain/kotlin/com/javiersc/compose/resources/core/PainterResourceExtensions.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 45,
      "length": 1,
      "code": {
        "startLine": 4,
        "length": 1,
        "offset": 98,
        "surroundingCode": "import androidx.compose.ui.graphics.painter.Painter\n\n@Composable public expect fun painterResource(resource: String, type: String): Painter"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6438869392645280140"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[ACTUAL_WITHOUT_EXPECT] Actual function 'painterResource' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun painterResource(resource: [ERROR : String], type: [ERROR : String]): Painter\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "core/androidMain/kotlin/com/javiersc/compose/resources/core/PainterResourceExtensions.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 46,
        "surroundingCode": "\n@Composable\npublic actual fun painterResource(resource: String, type: String): Painter {\n    val resourceName = resource.replaceAfterLast(\".\", \"\").dropLast(1)\n    return androidx.compose.ui.res.painterResource("
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.core",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "7114459854193328249"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: String",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "core/androidMain/kotlin/com/javiersc/compose/resources/core/PainterResourceExtensions.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 44,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 57,
        "surroundingCode": "\n@Composable\npublic actual fun painterResource(resource: String, type: String): Painter {\n    val resourceName = resource.replaceAfterLast(\".\", \"\").dropLast(1)\n    return androidx.compose.ui.res.painterResource("
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.core",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1347638117161112728"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: String",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "core/androidMain/kotlin/com/javiersc/compose/resources/core/PainterResourceExtensions.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 58,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 71,
        "surroundingCode": "\n@Composable\npublic actual fun painterResource(resource: String, type: String): Painter {\n    val resourceName = resource.replaceAfterLast(\".\", \"\").dropLast(1)\n    return androidx.compose.ui.res.painterResource("
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.core",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8653465324736244086"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[MISSING_DEPENDENCY_CLASS] Cannot access class 'android.content.Context'. Check your module classpath for missing or conflicting dependencies",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "core/androidMain/kotlin/com/javiersc/compose/resources/core/PainterResourceExtensions.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 9,
        "length": 4,
        "offset": 130,
        "surroundingCode": "    val resourceName = resource.replaceAfterLast(\".\", \"\").dropLast(1)\n    return androidx.compose.ui.res.painterResource(\n        with(LocalContext.current) { resources.getIdentifier(resourceName, type, packageName) }\n    )\n}"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.core",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9168433930431869768"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[MISSING_DEPENDENCY_CLASS] Cannot access class 'org.gradle.accessors.dm.LibrariesForLibs'. Check your module classpath for missing or conflicting dependencies",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "gradle-plugin/build.gradle.kts",
      "language": "kotlin",
      "line": 36,
      "offset": 25,
      "length": 4,
      "code": {
        "startLine": 34,
        "length": 4,
        "offset": 152,
        "surroundingCode": "    // TODO: remove when the next issue is fixed:\n    //  https://github.com/gradle/gradle/issues/15383#issuecomment-779893192\n    implementation(files(libs.javaClass.superclass.protectionDomain.codeSource.location))\n    implementation(files(pluginLibs.javaClass.superclass.protectionDomain.codeSource.location))\n"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.gradle-plugin",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6217760682367613218"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[MISSING_DEPENDENCY_CLASS] Cannot access class 'org.gradle.accessors.dm.LibrariesForLibs'. Check your module classpath for missing or conflicting dependencies",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "gradle-plugin/build.gradle.kts",
      "language": "kotlin",
      "line": 36,
      "offset": 30,
      "length": 9,
      "code": {
        "startLine": 34,
        "length": 9,
        "offset": 157,
        "surroundingCode": "    // TODO: remove when the next issue is fixed:\n    //  https://github.com/gradle/gradle/issues/15383#issuecomment-779893192\n    implementation(files(libs.javaClass.superclass.protectionDomain.codeSource.location))\n    implementation(files(pluginLibs.javaClass.superclass.protectionDomain.codeSource.location))\n"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.gradle-plugin",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "7234253658289630538"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[MISSING_DEPENDENCY_CLASS] Cannot access class 'org.gradle.accessors.dm.RootProjectAccessor'. Check your module classpath for missing or conflicting dependencies",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "gradle-plugin/build.gradle.kts",
      "language": "kotlin",
      "line": 39,
      "offset": 19,
      "length": 8,
      "code": {
        "startLine": 37,
        "length": 8,
        "offset": 116,
        "surroundingCode": "    implementation(files(pluginLibs.javaClass.superclass.protectionDomain.codeSource.location))\n\n    implementation(projects.core)\n\n    implementation(gradleApi())"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.gradle-plugin",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "399053925788689380"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: core",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "gradle-plugin/build.gradle.kts",
      "language": "kotlin",
      "line": 39,
      "offset": 28,
      "length": 4,
      "code": {
        "startLine": 37,
        "length": 4,
        "offset": 125,
        "surroundingCode": "    implementation(files(pluginLibs.javaClass.superclass.protectionDomain.codeSource.location))\n\n    implementation(projects.core)\n\n    implementation(gradleApi())"
      }
    }
  ],
  "attributes": {
    "module": "compose-resources.gradle-plugin",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-2384188144486756090"
}]}